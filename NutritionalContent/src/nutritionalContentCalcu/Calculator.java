/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nutritionalContentCalcu;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Devie
 */
public class Calculator extends javax.swing.JFrame implements MouseListener{

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents(); 
        spinach.addMouseListener(this);
        sweetPotato.addMouseListener(this);
        yogurt.addMouseListener(this);
        skimMilk.addMouseListener(this);
        wheatBread.addMouseListener(this);
        brownRice.addMouseListener(this);
        watermelon.addMouseListener(this);
        papaya.addMouseListener(this);
        tuna.addMouseListener(this);
        lobster.addMouseListener(this);
    }

    DefaultTableModel model = new DefaultTableModel();
     
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        yogurt = new javax.swing.JLabel();
        sweetPotato = new javax.swing.JLabel();
        wheatBread = new javax.swing.JLabel();
        brownRice = new javax.swing.JLabel();
        skimMilk = new javax.swing.JLabel();
        spinach = new javax.swing.JLabel();
        watermelon = new javax.swing.JLabel();
        papaya = new javax.swing.JLabel();
        tuna = new javax.swing.JLabel();
        lobster = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        txtCal = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtProtein = new javax.swing.JTextField();
        txtFats = new javax.swing.JTextField();
        txtVit = new javax.swing.JTextField();
        txtCalcium = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\spinach.jfif")); // NOI18N
        jLabel8.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        setBounds(new java.awt.Rectangle(50, 50, 0, 0));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CALCULATE THE NUTRITIONAL CONTENT OF FOOD YOU TAKE");

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jLabel2.setBackground(new java.awt.Color(0, 153, 153));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Spinach (1 cup)");

        yogurt.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\yogurt.jpg")); // NOI18N
        yogurt.setText("jLabel4");

        sweetPotato.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\sweer_potato.JPG")); // NOI18N
        sweetPotato.setText("jLabel4");

        wheatBread.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\wheat-bread.jpg")); // NOI18N
        wheatBread.setText("jLabel4");

        brownRice.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\brown-rice.jpg")); // NOI18N
        brownRice.setText("jLabel4");

        skimMilk.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\skim-milk.jpg")); // NOI18N
        skimMilk.setText("jLabel4");

        spinach.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\spinach.jfif")); // NOI18N
        spinach.setText("jLabel4");

        watermelon.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\watermelon.jpg")); // NOI18N
        watermelon.setText("jLabel4");

        papaya.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\papaya.jpg")); // NOI18N
        papaya.setText("jLabel4");

        tuna.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\tuna-in-water.jpeg")); // NOI18N
        tuna.setText("jLabel4");

        lobster.setIcon(new javax.swing.ImageIcon("C:\\Users\\Devie\\Documents\\NetBeansProjects\\NutritionalContent\\Images\\lobster.jpg")); // NOI18N
        lobster.setText("jLabel4");

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Watermelon (1 wedge)");

        jLabel9.setBackground(new java.awt.Color(0, 153, 153));
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Sweet Potato (1 med)");

        jLabel16.setBackground(new java.awt.Color(0, 153, 153));
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Yogurt (8 oz)");

        jLabel17.setBackground(new java.awt.Color(0, 153, 153));
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Skim Milk (1 cup)");

        jLabel18.setBackground(new java.awt.Color(0, 153, 153));
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Whole Wheat Bread (1 slice)");

        jLabel19.setBackground(new java.awt.Color(0, 153, 153));
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Brown Rice (1 cup)");

        jLabel20.setBackground(new java.awt.Color(0, 153, 153));
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Papaya (11g)");

        jLabel21.setBackground(new java.awt.Color(0, 153, 153));
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Tuna in water (1 lb.)");

        jLabel22.setBackground(new java.awt.Color(0, 153, 153));
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Lobster (1 med.)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(brownRice, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(spinach, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(34, 34, 34)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sweetPotato, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(9, 9, 9))))
                                    .addComponent(watermelon, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(43, 43, 43)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(29, 29, 29)
                                            .addComponent(yogurt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(papaya, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(skimMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(wheatBread, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tuna, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12))
                                    .addComponent(lobster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sweetPotato, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yogurt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(skimMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wheatBread, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinach, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brownRice, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(watermelon, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(papaya, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tuna, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lobster, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTable1.setBackground(new java.awt.Color(153, 255, 204));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food", "Quantity", "Calories", "Protein (grams)", "Fat (grams)", "Vit A (IU)", "Calcium (mg)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Total Calories :");

        txtCal.setBackground(new java.awt.Color(255, 255, 204));
        txtCal.setForeground(new java.awt.Color(0, 0, 0));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Total Fats :");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Total Protein :");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Total Vitamins :");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Total Calcium :");

        txtProtein.setBackground(new java.awt.Color(255, 255, 204));
        txtProtein.setForeground(new java.awt.Color(0, 0, 0));

        txtFats.setBackground(new java.awt.Color(255, 255, 204));
        txtFats.setForeground(new java.awt.Color(0, 0, 0));

        txtVit.setBackground(new java.awt.Color(255, 255, 204));
        txtVit.setForeground(new java.awt.Color(0, 0, 0));

        txtCalcium.setBackground(new java.awt.Color(255, 255, 204));
        txtCalcium.setForeground(new java.awt.Color(0, 0, 0));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Press the image of  the food you take, and input the quantity you eat.");

        clearBtn.setBackground(new java.awt.Color(255, 255, 204));
        clearBtn.setForeground(new java.awt.Color(0, 0, 0));
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(277, 277, 277))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 24, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProtein, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFats, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVit, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCalcium, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(498, 498, 498)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtProtein, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtFats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtVit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtCalcium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2546, 2546, 2546)))
                .addComponent(jLabel5)
                .addGap(4180, 4180, 4180))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
           
            DefaultTableModel dt = (DefaultTableModel)jTable1.getModel();
            txtCal.setText(null); 
            txtProtein.setText(null);
            txtFats.setText(null);  
            txtVit.setText(null);
            txtCalcium.setText(null);
            DefaultTableModel model = (DefaultTableModel)
            jTable1.getModel();
            model.setRowCount(0);
            
            
    }//GEN-LAST:event_clearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brownRice;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lobster;
    private javax.swing.JLabel papaya;
    private javax.swing.JLabel skimMilk;
    private javax.swing.JLabel spinach;
    private javax.swing.JLabel sweetPotato;
    private javax.swing.JLabel tuna;
    private javax.swing.JTextField txtCal;
    private javax.swing.JTextField txtCalcium;
    private javax.swing.JTextField txtFats;
    private javax.swing.JTextField txtProtein;
    private javax.swing.JTextField txtVit;
    private javax.swing.JLabel watermelon;
    private javax.swing.JLabel wheatBread;
    private javax.swing.JLabel yogurt;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
         
         if(e.getSource() == spinach) {
             
             String name = "Spinach";
             double calories = 23;
             double protein = 3;
             double fat = 0.3;
             double vit = 8100;
             double calcium = 93;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food you take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             //getting the sum of each columns
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString());
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
             
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");  
         } else if(e.getSource() == sweetPotato) {
             
             String name = "Sweet Potato";
             double calories = 160;
             double protein = 2;
             double fat = 1;
             double vit = 9230;
             double calcium = 46;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food you take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");    
         } else if(e.getSource() == yogurt) {
             
             String name = "Yogurt";
             double calories = 230;
             double protein = 10;
             double fat = 3;
             double vit = 120;
             double calcium = 343;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food you take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");    
         } else if(e.getSource() == skimMilk) {
             
             String name = "Skim Milk";
             double calories = 85;
             double protein = 8;
             double fat = 0;
             double vit = 500;
             double calcium = 302;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food you take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");    
         } else if(e.getSource() == wheatBread) {
             
             String name = "Whole Wheat Bread";
             double calories = 65;
             double protein = 3;
             double fat = 1;
             double vit = 0;
             double calcium = 24;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food you take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");    
         } else if(e.getSource() == brownRice) {
             
             String name = "Brown Rice";
             double calories = 178;
             double protein = 3.8;
             double fat = 0.9;
             double vit = 0;
             double calcium = 18;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food you take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                 fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");  
         } else if(e.getSource() == watermelon) {
             
             String name = "Watermelon";
             double calories = 110;
             double protein = 2;
             double fat = 1;
             double vit = 2510;
             double calcium = 30;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food yoy take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
              double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");  
         } else if(e.getSource() == papaya) {
             
             String name = "Papaya";
             double calories = 156;
             double protein = 2.4;
             double fat = 0.4;
             double vit = 7000;
             double calcium = 80;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food yoy take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");    
         }else if(e.getSource() == tuna) {
             
             String name = "Tuna in Water";
             double calories = 575;
             double protein = 126.8;
             double fat = 3.6;
             double vit = 0;
             double calcium = 73;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food yoy take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");
         } else if(e.getSource() == lobster) {
             
             String name = "Lobster";
             double calories = 405;
             double protein = 28.8;
             double fat = 26.6;
             double vit = 984;
             double calcium = 190;
             
             int quantity = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity of food yoy take."));
             double totalCal = calories*quantity;
             double totalFat = Math.round(fat*quantity*100)/100.00;
             double totalProtein = Math.round(protein*quantity*100)/100.00;
             double totalVit = vit*quantity;
             double totalCalcium = calcium*quantity;
             
             model = (DefaultTableModel)jTable1.getModel();
             model.addRow(new Object[] {
                 name,
                 quantity,
                 totalCal,
                 totalProtein,
                 totalFat,
                 totalVit,
                 totalCalcium   
             });
             
             double caloriesSum = 0;
             double proteinSum = 0;
             double fatSum = 0;
             double vitSum = 0;
             double calciumSum = 0;
             
             for(int i=0; i<jTable1.getRowCount(); i++) {
                caloriesSum = caloriesSum + Double.parseDouble(jTable1.getValueAt(i,2).toString());
                proteinSum = proteinSum + Double.parseDouble(jTable1.getValueAt(i,3).toString());
                fatSum = Math.round(fatSum + Double.parseDouble(jTable1.getValueAt(i,4).toString()));
                vitSum = vitSum + Double.parseDouble(jTable1.getValueAt(i,5).toString());
                calciumSum = calciumSum + Double.parseDouble(jTable1.getValueAt(i,6).toString());
            }
                     
            //Printing the total nutritional content of foods            
            txtCal.setText(Double.toString(caloriesSum));  
            txtProtein.setText(Double.toString(proteinSum) + " grams");  
            txtFats.setText(Double.toString(fatSum) + " grams");  
            txtVit.setText(Double.toString(vitSum) + " IU");  
            txtCalcium.setText(Double.toString(calciumSum) + " mg");
         }     
    }


    @Override
    public void mousePressed(MouseEvent e) {
    
    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {
  
    }

    @Override
    public void mouseExited(MouseEvent e) {

    }
}
